int search(vector<int> &arr, int n, int k)
{
  int low = 0, high = n - 1;
  while (low <= high)
  {
    int mid = (low + high) / 2;
    if (arr[mid] == k)
      return mid;

    // Left side of array is sorted
    if (arr[low] <= arr[mid])
    {
      // if element is in between sorted part
      if (arr[low] <= k && k <= arr[mid])
        high = mid - 1;

      else
        low = mid + 1;
    }

    // Right side of the array is sorted
    else
    {
      if (arr[mid] <= k && k <= arr[high])
        low = mid + 1;

      else
        high = mid - 1;
    }
  }
  return -1;
}
